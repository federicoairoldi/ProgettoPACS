segments(e1[1],e1[2],e2[1],e2[2], col = "blue", lwd = 2.5)
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = 2.5)
lines(c(e1[1]-1,e2[1]+1),c(0,0),col="blue",lty=2, lwd = 2.5)
arrows(p[1],p[2],0,0,col = "red",code=3,length=0.1, lwd = 2.5)
arrows(p[1],p[2],e2[1],e2[2],col = "green",code=3,length=0.1, lwd = 2.5)
alphahull::arc(c(0,0), 1, c(-1,0), pi, col = "red", lwd = 2.5)
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "green", lwd = 2.5)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.3)
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Report/img/caso1.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-0.5,e2[1]+0.5), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]),expression("e"[2])),
col = c("black","black","blue","blue"),pos = c(3,1,1,1),cex=2)
segments(e1[1],e1[2],e2[1],e2[2], col = "blue", lwd = 2.5)
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = 2.5)
lines(c(e1[1]-1,e2[1]+1),c(0,0),col="blue",lty=2, lwd = 2.5)
arrows(p[1],p[2],0,0,col = "red",code=3,length=0.1, lwd = 2.5)
arrows(p[1],p[2],e2[1],e2[2],col = "green",code=3,length=0.1, lwd = 2.5)
alphahull::arc(c(0,0), 1, c(-1,0), pi, col = "red", lwd = 2.5)
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "green", lwd = 2.5)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.3)
graphics.off()
cex = 3
lwd = 3
e1 = c(-1,0)
e2 = c(2,0)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/caso1.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-0.5,e2[1]+0.5), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1), cex = cex)
segments(e1[1],e1[2],e2[1],e2[2], col = "blue", lwd = lwd)
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = lwd)
lines(c(e1[1]-1,e2[1]+1),c(0,0),col="blue",lty=2, lwd = lwd)
arrows(p[1],p[2],0,0,col = "red",code=3,length=0.1, lwd = lwd)
arrows(p[1],p[2],e2[1],e2[2],col = "green",code=3,length=0.1, lwd = lwd)
alphahull::arc(c(0,0), 1, c(-1,0), pi, col = "red", lwd = lwd)
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "green", lwd = lwd)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = cex)
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Report/img/caso1.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-0.5,e2[1]+0.5), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1), cex = cex)
segments(e1[1],e1[2],e2[1],e2[2], col = "blue", lwd = lwd)
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = lwd)
lines(c(e1[1]-1,e2[1]+1),c(0,0),col="blue",lty=2, lwd = lwd)
arrows(p[1],p[2],0,0,col = "red",code=3,length=0.1, lwd = lwd)
arrows(p[1],p[2],e2[1],e2[2],col = "green",code=3,length=0.1, lwd = lwd)
alphahull::arc(c(0,0), 1, c(-1,0), pi, col = "red", lwd = lwd)
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "green", lwd = lwd)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 2)
graphics.off()
help("text")
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1), cex = cex, offset = 0.1)
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-0.5,e2[1]+0.5), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1), cex = cex, offset = 0.1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1), cex = cex)
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-0.5,e2[1]+0.5), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1), cex = cex, offset = -0.1)
cex = 2.8
lwd = 3
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-0.5,e2[1]+0.5), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1), cex = cex)
segments(e1[1],e1[2],e2[1],e2[2], col = "blue", lwd = lwd)
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = lwd)
lines(c(e1[1]-1,e2[1]+1),c(0,0),col="blue",lty=2, lwd = lwd)
arrows(p[1],p[2],0,0,col = "red",code=3,length=0.1, lwd = lwd)
arrows(p[1],p[2],e2[1],e2[2],col = "green",code=3,length=0.1, lwd = lwd)
alphahull::arc(c(0,0), 1, c(-1,0), pi, col = "red", lwd = lwd)
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "green", lwd = lwd)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 2)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/caso1.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-0.5,e2[1]+0.5), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1), cex = cex)
segments(e1[1],e1[2],e2[1],e2[2], col = "blue", lwd = lwd)
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = lwd)
lines(c(e1[1]-1,e2[1]+1),c(0,0),col="blue",lty=2, lwd = lwd)
arrows(p[1],p[2],0,0,col = "red",code=3,length=0.1, lwd = lwd)
arrows(p[1],p[2],e2[1],e2[2],col = "green",code=3,length=0.1, lwd = lwd)
alphahull::arc(c(0,0), 1, c(-1,0), pi, col = "red", lwd = lwd)
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "green", lwd = lwd)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.8)
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = T,
xlim = c(e1[1]-0.5,e2[1]+0.5), asp = 1)
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = T,
xlim = c(e1[1]-0.5,e2[1]+0.5), asp = 1)
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = T,
xlim = c(e1[1]-0.5,e2[1]+0.5), asp = 1)
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = T,
xlim = c(e1[1]-0.5,e2[1]+0.5), asp = 1)
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-0.5,e2[1]+0.5), asp = 1)
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-0.5,e2[1]+0.5), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1), cex = cex)
segments(e1[1],e1[2],e2[1],e2[2], col = "blue", lwd = lwd)
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = lwd)
lines(c(e1[1]-1,e2[1]+1),c(0,0),col="blue",lty=2, lwd = lwd)
arrows(p[1],p[2],0,0,col = "red",code=3,length=0.1, lwd = lwd)
arrows(p[1],p[2],e2[1],e2[2],col = "green",code=3,length=0.1, lwd = lwd)
alphahull::arc(c(0,0), 1, c(-1,0), pi, col = "red", lwd = lwd)
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "green", lwd = lwd)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.8)
q()
vorcpp = RcppAlphahull::delvor(x,y)
vorR = alphahull::delvor(x, y)
alpha = 1
asR = alphahull::ashape(vorR, alpha = alpha)
ascpp = RcppAlphahull::ashape(vorcpp, alpha = alpha)
asR$alpha.extremes
n = 10 # 35
set.seed(353) # 353
x = runif(n)
y = runif(n)
vorcpp = RcppAlphahull::delvor(x,y)
vorR = alphahull::delvor(x, y)
alpha = 1
asR = alphahull::ashape(vorR, alpha = alpha)
ascpp = RcppAlphahull::ashape(vorcpp, alpha = alpha)
asR$alpha.extremes
ascpp$alpha.extremes
plot(asR, wpoints = T)
plot(ascpp, wpoints = T, col = c("red","black"))
alpha = 0.2
ahR = alphahull::ahull(vorR, alpha = alpha)
ahcpp = RcppAlphahull::ahull(vorcpp, alpha = alpha)
ahcpp$length
ahR$length
plot(ahR, col = c("red", "black", "black", "black", "black", "black"), asp = 1)
plot(ahcpp, col = c("cyan", "black", "black", "black", "black", "black"), asp = 1, add = T)
plot(ahR, col = c("red", "black", "black", "black", "black", "black"), asp = 1, add = T)
plot(vorR, number = F, wpoints = F, wlines = "vor", col = "grey", asp = 1)
help(plot.delvor)
library(RcppAlphahull)
help(plot.delvor)
help(plot.ahull)
n = 10
x = runif(n)
y = runif(n)
alpha = 0.2
ah = ashape(x,y,alpha = )
ah = ashape(x,y,alpha)
plot(ah)
plot(ah, wlines = 'both')
warnings()
plot(ah, wlines = 'both')
plot(ah)
plot(ah)
plot(ah, wlines = 'both')
help(plot.ashape)
plot.delvor(x$delvor.obj, add = add, wlines = wlines,
wpoints = wpoints, number = number, col = col[2:5],
lwd = lwd[1], xlim = xlim, ylim = ylim, ...)
plot.delvor(ah$delvor.obj)
help(ahull)
reticulate::repl_python()
reticulate::py_install('numpy')
reticulate::py_install('numpy')
reticulate::repl_python()
reticulate::py_install('numpy')
reticulate::repl_python()
library(reticulate)
py_config()
RETICULATE_PYTHON = "/usr/bin/python3"
use_python('/usr/bin/python3', required = T)
reticulate::use_python('/usr/bin/python3', required = T)
reticulate::py_config()
library(reticulate)
repl_python()
reticulate::repl_python()
ls -a
reticulate::py_config()
reticulate::py_config()
reticulate::py_config()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::py_config()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
library(rgl)
plot3d(data_proxy[,1:3], col = color(data_proxy[,"label"]))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("Data_proxy.RData")
levels = length(unique(data_proxy[,"label"]))
colors = c("blue", "yellow", "green", "orange", "spring green", "pink", "grey", "light green", "steel blue", "turqoise1")
plot3d(data_proxy[,1:3], col = color(data_proxy[,"label"]))
plot3d(data_proxy[,1:3], col = colors(data_proxy[,"label"]))
data_proxy[,"label"]
plot3d(data_proxy[,1:3], col = colors[data_proxy[,"label"]])
colors = c("blue", "yellow", "green", "orange", "spring green", "pink", "grey", "light green", "steel blue", "turquoise1")
plot3d(data_proxy[,1:3], col = colors[data_proxy[,"label"]])
plot3d(data_proxy[,1:3], col = colors[data_proxy[,"label"]])
plot3d(data_proxy[,1:3], col = colors[data_proxy[,"label"]])
rgl.postscript("egg_planes.eps", "eps")
rgl.postscript("/home/federico/Dropbox/Alpha-hulls/Report/img/egg_planes.eps", "eps")
rgl.postscript("home/federico/Dropbox/Alpha-hulls/Report/img/egg_planes.eps", "eps")
rgl.postscript("/home/federico/Dropbox/Alpha-hulls/Report/img/egg_planes.eps", "eps")
rgl.postscript("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg_planes.eps", "eps")
rgl.postscript("/home/egg_planes.eps", "eps")
rgl.postscript("/egg_planes.eps", "eps")
plot3d(data_proxy[,1:3], col = colors[data_proxy[,"label"]])
rgl.postscript("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg_planes.eps", "eps")
x11()
plot3d(data_proxy[,1:3], col = colors[data_proxy[,"label"]])
r3dDefaults$windowRect = c(0,50,800,800)
plot3d(data_proxy[,1:3], col = colors[data_proxy[,"label"]])
r3dDefaults$windowRect = c(0,50,800,800)
plot3d(data_proxy[,1:3], col = colors[data_proxy[,"label"]])
rgl.postscript("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg_planes.eps", "eps")
x11()
par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.shape = RcppAlphahull::ashape(xy, alpha = 0.5)
plot(alpha.shape, col = c("blue","black"))
lista = list(lista, alpha.shape)
}
x11(width = 960, height = 480)
png("home/federico/Dropbox/Alpha-hulls/Documenti/img/egg_ashape.png", width = 960, height = 480 )
par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.shape = RcppAlphahull::ashape(xy, alpha = 0.5)
plot(alpha.shape, col = c("blue","black"))
lista = list(lista, alpha.shape)
}
graphics.off()
png("home/federico/Dropbox/Alpha-hulls/Documenti/img/egg_ashape.png", width = 960, height = 480 )
par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.shape = RcppAlphahull::ashape(xy, alpha = 0.5)
plot(alpha.shape, col = c("blue","black"))
lista = list(lista, alpha.shape)
}
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg_ashape.png", width = 960, height = 480 )
par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.shape = RcppAlphahull::ashape(xy, alpha = 0.5)
plot(alpha.shape, col = c("blue","black"))
lista = list(lista, alpha.shape)
}
graphics.off()
lista = list()
png("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg_ashape.png", width = 960, height = 480 )
par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.shape = RcppAlphahull::ashape(xy, alpha = 0.5)
plot(alpha.shape, col = c("blue","black"))
lista = list(lista, alpha.shape)
}
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg_ashape.png", width = 960, height = 480 )
par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.shape = RcppAlphahull::ashape(xy, alpha = 0.5)
plot(alpha.shape, col = c("red", col = colors[level]), asp = T)
lista = list(lista, alpha.shape)
}
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg_ashape.png", width = 960, height = 480 )
par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.shape = RcppAlphahull::ashape(xy, alpha = 0.5)
plot(alpha.shape, col = c("red", col = colors[level]), asp = T, xlab = "", ylab = "", xlim = c(-30,30))
lista = list(lista, alpha.shape)
}
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg_ashape.png", width = 960, height = 480 )
par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.shape = RcppAlphahull::ashape(xy, alpha = 0.5)
plot(alpha.shape, col = c("red", col = colors[level]), asp = T, xlab = "", ylab = "", xlim = c(-20,20))
lista = list(lista, alpha.shape)
}
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg_ashape.png", width = 960, height = 480 )
par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.shape = RcppAlphahull::ashape(xy, alpha = 0.5)
plot(alpha.shape, col = c("red", col = colors[level]), asp = 1, xlab = "", ylab = "")
lista = list(lista, alpha.shape)
}
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg_ahull.png", width = 960, height = 480 )
par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.hull = Ralphahull::ahull(xy, alpha = 0.5)
plot(alpha.hull, col = c("red", col = colors[level]), asp = 1, xlab = "", ylab = "")
lista = list(lista, alpha.hull)
}
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg_ahull.png", width = 960, height = 480 )
par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.hull = RcppAlphahull::ahull(xy, alpha = 0.5)
plot(alpha.hull, col = c("red", col = colors[level]), asp = 1, xlab = "", ylab = "")
lista = list(lista, alpha.hull)
}
graphics.off()
help(plot.ahull)
png("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg_ahull.png", width = 960, height = 480 )
par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.hull = RcppAlphahull::ahull(xy, alpha = 0.5)
plot(alpha.hull, col = c("red", "white", col = colors[level]), asp = 1, xlab = "", ylab = "")
lista = list(lista, alpha.hull)
}
graphics.off()
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.shape = RcppAlphahull::ashape(xy, alpha = 0.5)
png(paste("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/face",1,"_ashape.png",sep=""), width = 960, height = 480 )
plot(alpha.shape, col = c("red", col = colors[level]), asp = 1, xlab = "", ylab = "")
graphics.off()
lista = list(lista, alpha.shape)
}
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.shape = RcppAlphahull::ashape(xy, alpha = 0.5)
png(paste("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/face",level,"_ashape.png",sep=""), width = 960, height = 480 )
plot(alpha.shape, col = c("red", col = colors[level]), asp = 1, xlab = "", ylab = "")
graphics.off()
lista = list(lista, alpha.shape)
}
plot3d(data_proxy[,1:3], col = colors[data_proxy[,"label"]], pch = 19)
r3dDefaults$windowRect = c(0,50,800,800)
plot3d(data_proxy[,1:3], col = colors[data_proxy[,"label"]], pch = 19)
rgl.postscript("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/egg_planes.eps", "eps")
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.shape = RcppAlphahull::ashape(xy, alpha = 0.5)
png(paste("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/face",level,"_ashape.png",sep=""), width = 960, height = 480 )
plot(alpha.shape, col = c("red", col = colors[level]), asp = 1, xlab = "", ylab = "", pch = 19)
graphics.off()
lista = list(lista, alpha.shape)
}
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.hull = RcppAlphahull::ahull(xy, alpha = 0.5)
png(paste("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/face",level,"_ahull.png",sep=""), width = 960, height = 480 )
plot(alpha.hull, col = c("red", "white", col = colors[level]), asp = 1, xlab = "", ylab = "", pch = 19)
graphics.off()
lista = list(lista, alpha.hull)
}
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.shape = RcppAlphahull::ashape(xy, alpha = 0.85)
png(paste("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/face",level,"_ashape.png",sep=""), width = 960, height = 480 )
plot(alpha.shape, col = c("red", col = colors[level]), asp = 1, xlab = "", ylab = "", pch = 19)
graphics.off()
lista = list(lista, alpha.shape)
}
# graphics.off()
# x11()
# png("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/egg_ahull.png", width = 960, height = 480 )
# par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.hull = RcppAlphahull::ahull(xy, alpha = 0.85)
png(paste("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/face",level,"_ahull.png",sep=""), width = 960, height = 480 )
plot(alpha.hull, col = c("red", "white", col = colors[level]), asp = 1, xlab = "", ylab = "", pch = 19)
graphics.off()
lista = list(lista, alpha.hull)
}
# graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/egg_ashape.png", width = 960, height = 480 )
par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.shape = RcppAlphahull::ashape(xy, alpha = 0.85)
# png(paste("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/face",level,"_ashape.png",sep=""), width = 960, height = 480 )
plot(alpha.shape, col = c("red", col = colors[level]), asp = 1, xlab = "", ylab = "", pch = 19)
# graphics.off()
lista = list(lista, alpha.shape)
}
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/egg_ahull.png", width = 960, height = 480 )
par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.hull = RcppAlphahull::ahull(xy, alpha = 0.85)
# png(paste("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/face",level,"_ahull.png",sep=""), width = 960, height = 480 )
plot(alpha.hull, col = c("red", "white", col = colors[level]), asp = 1, xlab = "", ylab = "", pch = 19)
# graphics.off()
lista = list(lista, alpha.hull)
}
graphics.off()
plot3d(data_proxy[,1:3], col = colors[data_proxy[,"label"]], pch = 19)
rgl.postscript("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/egg_planes.png", "png")
rgl.postscript("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/egg_planes.pdf", "pdf")
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.shape = RcppAlphahull::ashape(xy, alpha = 0.85)
png(paste("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/face",level,"_ashape.png",sep=""), width = 960, height = 480 )
plot(alpha.shape, col = c("red", col = colors[level]), asp = 1, xlab = "", ylab = "", pch = 19, main = paste("Face",level))
graphics.off()
lista = list(lista, alpha.shape)
}
# graphics.off()
# x11()
# png("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/egg_ahull.png", width = 960, height = 480 )
# par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.hull = RcppAlphahull::ahull(xy, alpha = 0.85)
png(paste("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/face",level,"_ahull.png",sep=""), width = 960, height = 480 )
plot(alpha.hull, col = c("red", "white", col = colors[level]), asp = 1, xlab = "", ylab = "", pch = 19, main = paste("Face",level))
graphics.off()
lista = list(lista, alpha.hull)
}
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.shape = RcppAlphahull::ashape(xy, alpha = 0.85)
png(paste("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/face",level,"_ashape.png",sep=""), width = 960, height = 480 )
plot(alpha.shape, col = c("red", col = colors[level]), asp = 1, xlab = "", ylab = "", pch = 19, main = paste("Face",level), cex.main = 2)
graphics.off()
lista = list(lista, alpha.shape)
}
# graphics.off()
# x11()
# png("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/egg_ahull.png", width = 960, height = 480 )
# par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.hull = RcppAlphahull::ahull(xy, alpha = 0.85)
png(paste("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/face",level,"_ahull.png",sep=""), width = 960, height = 480 )
plot(alpha.hull, col = c("red", "white", col = colors[level]), asp = 1, xlab = "", ylab = "", pch = 19, main = paste("Face",level), cex.main = 2)
graphics.off()
lista = list(lista, alpha.hull)
}
# par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.shape = RcppAlphahull::ashape(xy, alpha = 0.85)
png(paste("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/face",level,"_ashape.png",sep=""), width = 960, height = 480 )
plot(alpha.shape, col = c("red", col = colors[level]), asp = 1, xlab = "", ylab = "", pch = 19, main = paste("Face",level), cex.main = 4)
graphics.off()
lista = list(lista, alpha.shape)
}
# graphics.off()
# x11()
# png("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/egg_ahull.png", width = 960, height = 480 )
# par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.hull = RcppAlphahull::ahull(xy, alpha = 0.85)
png(paste("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/face",level,"_ahull.png",sep=""), width = 960, height = 480 )
plot(alpha.hull, col = c("red", "white", col = colors[level]), asp = 1, xlab = "", ylab = "", pch = 19, main = paste("Face",level), cex.main = 4)
graphics.off()
lista = list(lista, alpha.hull)
}
# graphics.off()
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.shape = RcppAlphahull::ashape(xy, alpha = 0.85)
png(paste("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/face",level,"_ashape.png",sep=""), width = 960, height = 480 )
plot(alpha.shape, col = c("red", col = colors[level]), asp = 1, xlab = "", ylab = "", pch = 19, main = paste("Face",level), cex.main = 3)
graphics.off()
lista = list(lista, alpha.shape)
}
# graphics.off()
# x11()
# png("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/egg_ahull.png", width = 960, height = 480 )
# par(mfrow = c(2,5))
for(level in 1:levels){
xy = princomp(data_proxy[which(data_proxy[,"label"]==level), 1:3], scores = T)$scores[,1:2]
alpha.hull = RcppAlphahull::ahull(xy, alpha = 0.85)
png(paste("/home/federico/Dropbox/Alpha-hulls/Documenti/img/egg/face",level,"_ahull.png",sep=""), width = 960, height = 480 )
plot(alpha.hull, col = c("red", "white", col = colors[level]), asp = 1, xlab = "", ylab = "", pch = 19, main = paste("Face",level), cex.main = 3)
graphics.off()
lista = list(lista, alpha.hull)
}
# graphics.off()
