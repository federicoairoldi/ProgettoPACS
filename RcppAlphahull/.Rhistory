points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.7)
graphics.off()
# caso 2
p = c(0,1)
q = c(0,-1)
e1 = c(-3,0)
e2 = c(-1,0)
png("C:/Users/Federico/Dropbox/Alpha-hulls/Report/img/caso2.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-0.5,q[1]+0.5), ylim = c(q[2]-0.1,p[2]+0.1), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1), cex=2.8, offset = 1)
segments(e1[1],e1[2],e2[1],e2[2], col = "blue", lwd = 2.5)
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = 2.5)
lines(c(e1[1]-1,q[1]+1),c(0,0),col="blue",lty=2, lwd = 2.5)
arrows(p[1],p[2],e2[1],e2[2],col = "red",code=3,length=0.1, lwd = 2.5)
arrows(p[1],p[2],e1[1],e1[2],col = "green",code=3,length=0.1, lwd = 2.5)
alphahull::arc(e1, dist_my(p,e1), c(-1,0), pi, col = "green", lwd = 2.5)
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "red", lwd = 2.5)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.3)
graphics.off()
# caso 3
p = c(0,1)
q = c(0,-1)
e1 = c(-1,0)
e2 = c(2,0)
png("C:/Users/Federico/Dropbox/Alpha-hulls/Report/img/caso3.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-2,e2[1]+0.5), ylim = c(q[2]-0.1,p[2]+0.1), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1), cex=2.8, offset = 1)
#segments(e1[1],e1[2],e2[1],e2[2], col = "blue")
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = 2.5)
lines(c(e1[1]-2,e2[1]),c(0,0),col="blue",lty=2, lwd = 2.5)
arrows(p[1],p[2],0,0,col = "red",code=3,length=0.1, lwd = 2.5)
#arrows(p[1],p[2],e2[1],e2[2],col = "green",code=3,length=0.1, lwd = 2.5)
alphahull::arc(c(0,0), 1, c(-1,0), pi, col = "red", lwd = 2.5)
#alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "green", lwd = 2.5)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.3)
graphics.off()
# caso 4
p = c(0,1)
q = c(0,-1)
e1 = c(-3,0)
e2 = c(-1,0)
png("C:/Users/Federico/Dropbox/Alpha-hulls/Report/img/caso4.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-1,q[1]+0.5), ylim = c(q[2]-0.1,p[2]+0.1), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1) ,cex=2.8, offset = 1)
#segments(e1[1],e1[2],e2[1],e2[2], col = "blue")
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = 2.5)
lines(c(e1[1]-1,e2[1]),c(0,0),col="blue",lty=2, lwd = 2.5)
arrows(p[1],p[2],e2[1],e2[2],col = "red",code=3,length=0.1, lwd = 2.5)
#arrows(p[1],p[2],e1[1],e1[2],col = "green",code=3,length=0.1)
#alphahull::arc(e1, dist_my(p,e1), c(-1,0), pi, col = "green")
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "red", lwd = 2.5)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.3)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.3)
graphics.off()
# VORONOI EXAMPLE
n = 10
set.seed(325) # 353
x = runif(n)
y = runif(n)
vorcpp = RcppAlphahull::delvor(x,y)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/vor_ex.png")
RcppAlphahull::plot.delvor(vorcpp, col = c("blue", "red", "black", "blue"), pch = 19, wpoints = T,
wlines = 'vor', number = F, xlab = "x", ylab = "y", xlim = c(0, 1),
ylim = c(0, 1.1), asp = 1, cex = 1.3, lwd = c(2,2),
main = "Voronoi tesselation")
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Report/img/del_ex.png")
RcppAlphahull::plot.delvor(vorcpp, col = c("blue", "red", "black", "blue"), pch = 19, wpoints = T,
wlines = 'del', number = F, xlab = "x", ylab = "y", xlim = c(0, 1),
ylim = c(0, 1.1), asp = 1, cex = 1.3, lwd = c(2,2),
main = "Delaunay triangulation")
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Report/img/delvor_ex.png")
RcppAlphahull::plot.delvor(vorcpp, col = c("blue", "red", "black", "blue"), pch = 19, wpoints = T,
wlines = 'both', number = F, xlab = "x", ylab = "y", xlim = c(0, 1),
ylim = c(0, 1.1), asp = 1, lwd = 2, cex = 1.3, cex.lab = 1.8,
cex.main = 1.8, main = "Voronoi tesselation/Delaunay triangulation")
graphics.off()
alpha = 0.4
ascpp = RcppAlphahull::ashape(vorcpp, alpha = alpha)
ahcpp = RcppAlphahull::ahull(x, y, alpha = alpha)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/ashape_ex.png")
plot(ascpp, col = c("red","blue"), pch = 19, asp = 1, lwd = 2, xlab = "x", ylab = "y", cex = 1.3,
cex.lab = 1.8, cex.main = 2, main = expression(paste(alpha,"-shape for ",alpha,"=0.4")))
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Report/img/ahull_ex.png")
plot(ahcpp, col = c("red","blue","blue"), pch = 19, asp = 1, lwd = 2, xlab = "x", ylab = "y", cex = 1.3,
cex.lab = 1.8, cex.main = 2, main = expression(paste(alpha,"-hull for ",alpha,"=0.4")))
graphics.off()
dist_my = function(p,q){
return(sqrt( ( p[1]-q[1] )^2 + ( p[2]-q[2] )^2 ))
}
# caso 1
p = c(0,1)
q = c(0,-1)
e1 = c(-1,0)
e2 = c(2,0)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/caso1.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-0.5,e2[1]+0.5), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"),pos = c(3,1,1,1), cex=2.8, offset = 1)
segments(e1[1],e1[2],e2[1],e2[2], col = "blue", lwd = 2.5)
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = 2.5)
lines(c(e1[1]-1,e2[1]+1),c(0,0),col="blue",lty=2, lwd = 2.5)
arrows(p[1],p[2],0,0,col = "red",code=3,length=0.1, lwd = 2.5)
arrows(p[1],p[2],e2[1],e2[2],col = "green",code=3,length=0.1, lwd = 2.5)
alphahull::arc(c(0,0), 1, c(-1,0), pi, col = "red", lwd = 2)
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "green", lwd = 2.5)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.7)
graphics.off()
# caso 2
p = c(0,1)
q = c(0,-1)
e1 = c(-3,0)
e2 = c(-1,0)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/caso2.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-0.5,q[1]+0.5), ylim = c(q[2]-0.1,p[2]+0.1), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1), cex=2.8, offset = 1)
segments(e1[1],e1[2],e2[1],e2[2], col = "blue", lwd = 2.5)
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = 2.5)
lines(c(e1[1]-1,q[1]+1),c(0,0),col="blue",lty=2, lwd = 2.5)
arrows(p[1],p[2],e2[1],e2[2],col = "red",code=3,length=0.1, lwd = 2.5)
arrows(p[1],p[2],e1[1],e1[2],col = "green",code=3,length=0.1, lwd = 2.5)
alphahull::arc(e1, dist_my(p,e1), c(-1,0), pi, col = "green", lwd = 2.5)
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "red", lwd = 2.5)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.3)
graphics.off()
# caso 3
p = c(0,1)
q = c(0,-1)
e1 = c(-1,0)
e2 = c(2,0)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/caso3.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-2,e2[1]+0.5), ylim = c(q[2]-0.1,p[2]+0.1), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1), cex=2.8, offset = 1)
#segments(e1[1],e1[2],e2[1],e2[2], col = "blue")
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = 2.5)
lines(c(e1[1]-2,e2[1]),c(0,0),col="blue",lty=2, lwd = 2.5)
arrows(p[1],p[2],0,0,col = "red",code=3,length=0.1, lwd = 2.5)
#arrows(p[1],p[2],e2[1],e2[2],col = "green",code=3,length=0.1, lwd = 2.5)
alphahull::arc(c(0,0), 1, c(-1,0), pi, col = "red", lwd = 2.5)
#alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "green", lwd = 2.5)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.3)
graphics.off()
# caso 4
p = c(0,1)
q = c(0,-1)
e1 = c(-3,0)
e2 = c(-1,0)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/caso4.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-1,q[1]+0.5), ylim = c(q[2]-0.1,p[2]+0.1), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1) ,cex=2.8, offset = 1)
#segments(e1[1],e1[2],e2[1],e2[2], col = "blue")
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = 2.5)
lines(c(e1[1]-1,e2[1]),c(0,0),col="blue",lty=2, lwd = 2.5)
arrows(p[1],p[2],e2[1],e2[2],col = "red",code=3,length=0.1, lwd = 2.5)
#arrows(p[1],p[2],e1[1],e1[2],col = "green",code=3,length=0.1)
#alphahull::arc(e1, dist_my(p,e1), c(-1,0), pi, col = "green")
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "red", lwd = 2.5)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.3)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.3)
graphics.off()
# VORONOI EXAMPLE
n = 10
set.seed(325) # 353
x = runif(n)
y = runif(n)
vorcpp = RcppAlphahull::delvor(x,y)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/vor_ex.png")
RcppAlphahull::plot.delvor(vorcpp, col = c("blue", "red", "black", "blue"), pch = 19, wpoints = T,
wlines = 'vor', number = F, xlab = "x", ylab = "y", xlim = c(0, 1),
ylim = c(0, 1.1), asp = 1, cex = 1.3, lwd = c(2,2),
main = "Voronoi tesselation")
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Report/img/del_ex.png")
RcppAlphahull::plot.delvor(vorcpp, col = c("blue", "red", "black", "blue"), pch = 19, wpoints = T,
wlines = 'del', number = F, xlab = "x", ylab = "y", xlim = c(0, 1),
ylim = c(0, 1.1), asp = 1, cex = 1.3, lwd = c(2,2),
main = "Delaunay triangulation")
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Report/img/delvor_ex.png")
RcppAlphahull::plot.delvor(vorcpp, col = c("blue", "red", "black", "blue"), pch = 19, wpoints = T,
wlines = 'both', number = F, xlab = "x", ylab = "y", xlim = c(0, 1),
ylim = c(0, 1.1), asp = 1, lwd = 2, cex = 1.3, cex.lab = 1.8,
cex.main = 1.8, main = "Voronoi tesselation/Delaunay triangulation")
graphics.off()
alpha = 0.4
ascpp = RcppAlphahull::ashape(vorcpp, alpha = alpha)
ahcpp = RcppAlphahull::ahull(x, y, alpha = alpha)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/ashape_ex.png")
plot(ascpp, col = c("red","blue"), pch = 19, asp = 1, lwd = 2, xlab = "x", ylab = "y", cex = 1.3,
cex.lab = 1.8, cex.main = 2, main = expression(paste(alpha,"-shape for ",alpha,"=0.4")))
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Report/img/ahull_ex.png")
plot(ahcpp, col = c("red","blue","blue"), pch = 19, asp = 1, lwd = 2, xlab = "x", ylab = "y", cex = 1.3,
cex.lab = 1.8, cex.main = 2, main = expression(paste(alpha,"-hull for ",alpha,"=0.4")))
graphics.off()
p = c(0,1)
q = c(0,-1)
e1 = c(-1.2,0)
e2 = c(2,0)
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-0.5,e2[1]+0.5), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"),pos = c(3,1,1,1), cex=2.8, offset = 1)
segments(e1[1],e1[2],e2[1],e2[2], col = "blue", lwd = 2.5)
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = 2.5)
lines(c(e1[1]-1,e2[1]+1),c(0,0),col="blue",lty=2, lwd = 2.5)
arrows(p[1],p[2],0,0,col = "red",code=3,length=0.1, lwd = 2.5)
arrows(p[1],p[2],e2[1],e2[2],col = "green",code=3,length=0.1, lwd = 2.5)
alphahull::arc(c(0,0), 1, c(-1,0), pi, col = "red", lwd = 2)
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "green", lwd = 2.5)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.7)
dist_my = function(p,q){
return(sqrt( ( p[1]-q[1] )^2 + ( p[2]-q[2] )^2 ))
}
# caso 1
p = c(0,1)
q = c(0,-1)
e1 = c(-1.2,0)
e2 = c(2,0)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/caso1.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-0.5,e2[1]+0.5), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"),pos = c(3,1,1,1), cex=2.8, offset = 1)
segments(e1[1],e1[2],e2[1],e2[2], col = "blue", lwd = 2.5)
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = 2.5)
lines(c(e1[1]-1,e2[1]+1),c(0,0),col="blue",lty=2, lwd = 2.5)
arrows(p[1],p[2],0,0,col = "red",code=3,length=0.1, lwd = 2.5)
arrows(p[1],p[2],e2[1],e2[2],col = "green",code=3,length=0.1, lwd = 2.5)
alphahull::arc(c(0,0), 1, c(-1,0), pi, col = "red", lwd = 2)
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "green", lwd = 2.5)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.7)
graphics.off()
# caso 2
p = c(0,1)
q = c(0,-1)
e1 = c(-3,0)
e2 = c(-1,0)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/caso2.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-0.5,q[1]+0.5), ylim = c(q[2]-0.1,p[2]+0.1), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1), cex=2.8, offset = 1)
segments(e1[1],e1[2],e2[1],e2[2], col = "blue", lwd = 2.5)
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = 2.5)
lines(c(e1[1]-1,q[1]+1),c(0,0),col="blue",lty=2, lwd = 2.5)
arrows(p[1],p[2],e2[1],e2[2],col = "red",code=3,length=0.1, lwd = 2.5)
arrows(p[1],p[2],e1[1],e1[2],col = "green",code=3,length=0.1, lwd = 2.5)
alphahull::arc(e1, dist_my(p,e1), c(-1,0), pi, col = "green", lwd = 2.5)
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "red", lwd = 2.5)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.3)
graphics.off()
# caso 3
p = c(0,1)
q = c(0,-1)
e1 = c(-1,0)
e2 = c(2,0)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/caso3.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-2,e2[1]+0.5), ylim = c(q[2]-0.1,p[2]+0.1), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1), cex=2.8, offset = 1)
#segments(e1[1],e1[2],e2[1],e2[2], col = "blue")
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = 2.5)
lines(c(e1[1]-2,e2[1]),c(0,0),col="blue",lty=2, lwd = 2.5)
arrows(p[1],p[2],0,0,col = "red",code=3,length=0.1, lwd = 2.5)
#arrows(p[1],p[2],e2[1],e2[2],col = "green",code=3,length=0.1, lwd = 2.5)
alphahull::arc(c(0,0), 1, c(-1,0), pi, col = "red", lwd = 2.5)
#alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "green", lwd = 2.5)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.3)
graphics.off()
# caso 4
p = c(0,1)
q = c(0,-1)
e1 = c(-3,0)
e2 = c(-1,0)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/caso4.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-1,q[1]+0.5), ylim = c(q[2]-0.1,p[2]+0.1), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1) ,cex=2.8, offset = 1)
#segments(e1[1],e1[2],e2[1],e2[2], col = "blue")
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = 2.5)
lines(c(e1[1]-1,e2[1]),c(0,0),col="blue",lty=2, lwd = 2.5)
arrows(p[1],p[2],e2[1],e2[2],col = "red",code=3,length=0.1, lwd = 2.5)
#arrows(p[1],p[2],e1[1],e1[2],col = "green",code=3,length=0.1)
#alphahull::arc(e1, dist_my(p,e1), c(-1,0), pi, col = "green")
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "red", lwd = 2.5)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.3)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.3)
graphics.off()
# VORONOI EXAMPLE
n = 10
set.seed(325) # 353
x = runif(n)
y = runif(n)
vorcpp = RcppAlphahull::delvor(x,y)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/vor_ex.png")
RcppAlphahull::plot.delvor(vorcpp, col = c("blue", "red", "black", "blue"), pch = 19, wpoints = T,
wlines = 'vor', number = F, xlab = "x", ylab = "y", xlim = c(0, 1),
ylim = c(0, 1.1), asp = 1, cex = 1.3, lwd = c(2,2),
main = "Voronoi tesselation")
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Report/img/del_ex.png")
RcppAlphahull::plot.delvor(vorcpp, col = c("blue", "red", "black", "blue"), pch = 19, wpoints = T,
wlines = 'del', number = F, xlab = "x", ylab = "y", xlim = c(0, 1),
ylim = c(0, 1.1), asp = 1, cex = 1.3, lwd = c(2,2),
main = "Delaunay triangulation")
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Report/img/delvor_ex.png")
RcppAlphahull::plot.delvor(vorcpp, col = c("blue", "red", "black", "blue"), pch = 19, wpoints = T,
wlines = 'both', number = F, xlab = "x", ylab = "y", xlim = c(0, 1),
ylim = c(0, 1.1), asp = 1, lwd = 2, cex = 1.3, cex.lab = 1.8,
cex.main = 1.8, main = "Voronoi tesselation/Delaunay triangulation")
graphics.off()
alpha = 0.4
ascpp = RcppAlphahull::ashape(vorcpp, alpha = alpha)
ahcpp = RcppAlphahull::ahull(x, y, alpha = alpha)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/ashape_ex.png")
plot(ascpp, col = c("red","blue"), pch = 19, asp = 1, lwd = 2, xlab = "x", ylab = "y", cex = 1.3,
cex.lab = 1.8, cex.main = 2, main = expression(paste(alpha,"-shape for ",alpha,"=0.4")))
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Report/img/ahull_ex.png")
plot(ahcpp, col = c("red","blue","blue"), pch = 19, asp = 1, lwd = 2, xlab = "x", ylab = "y", cex = 1.3,
cex.lab = 1.8, cex.main = 2, main = expression(paste(alpha,"-hull for ",alpha,"=0.4")))
graphics.off()
dist_my = function(p,q){
return(sqrt( ( p[1]-q[1] )^2 + ( p[2]-q[2] )^2 ))
}
# caso 1
p = c(0,1)
q = c(0,-1)
e1 = c(-1.2,0)
e2 = c(2,0)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/caso1.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-0.5,e2[1]+0.5), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"),pos = c(3,1,1,1), cex=2.8, offset = 1)
segments(e1[1],e1[2],e2[1],e2[2], col = "blue", lwd = 2.5)
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = 2.5)
lines(c(e1[1]-1,e2[1]+1),c(0,0),col="blue",lty=2, lwd = 2.5)
arrows(p[1],p[2],0,0,col = "red",code=3,length=0.1, lwd = 2.5)
arrows(p[1],p[2],e2[1],e2[2],col = "green",code=3,length=0.1, lwd = 2.5)
alphahull::arc(c(0,0), 1, c(-1,0), pi, col = "red", lwd = 2)
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "green", lwd = 2.5)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.7)
graphics.off()
# caso 2
p = c(0,1)
q = c(0,-1)
e1 = c(-3,0)
e2 = c(-1,0)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/caso2.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-0.5,q[1]+0.5), ylim = c(q[2]-0.1,p[2]+0.1), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1), cex=2.8, offset = 1)
segments(e1[1],e1[2],e2[1],e2[2], col = "blue", lwd = 2.5)
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = 2.5)
lines(c(e1[1]-1,q[1]+1),c(0,0),col="blue",lty=2, lwd = 2.5)
arrows(p[1],p[2],e2[1],e2[2],col = "red",code=3,length=0.1, lwd = 2.5)
arrows(p[1],p[2],e1[1],e1[2],col = "green",code=3,length=0.1, lwd = 2.5)
alphahull::arc(e1, dist_my(p,e1), c(-1,0), pi, col = "green", lwd = 2.5)
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "red", lwd = 2.5)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.3)
graphics.off()
# caso 3
p = c(0,1)
q = c(0,-1)
e1 = c(-1.2,0)
e2 = c(2,0)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/caso3.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-2,e2[1]+0.5), ylim = c(q[2]-0.1,p[2]+0.1), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1), cex=2.8, offset = 1)
#segments(e1[1],e1[2],e2[1],e2[2], col = "blue")
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = 2.5)
lines(c(e1[1]-2,e2[1]),c(0,0),col="blue",lty=2, lwd = 2.5)
arrows(p[1],p[2],0,0,col = "red",code=3,length=0.1, lwd = 2.5)
#arrows(p[1],p[2],e2[1],e2[2],col = "green",code=3,length=0.1, lwd = 2.5)
alphahull::arc(c(0,0), 1, c(-1,0), pi, col = "red", lwd = 2.5)
#alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "green", lwd = 2.5)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.3)
graphics.off()
# caso 4
p = c(0,1)
q = c(0,-1)
e1 = c(-3,0)
e2 = c(-1,0)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/caso4.png")
plot(rbind(p,q,e1,e2), pch = 19, col = c("black","black","blue","blue"), xlab = "", ylab = "", axes = F,
xlim = c(e1[1]-1,q[1]+0.5), ylim = c(q[2]-0.1,p[2]+0.1), asp = 1)
text(rbind(p,q,e1,e2), labels = c("p","q",expression("e"[1]), expression("e"[2])),
col = c("black","black","blue","blue"), pos = c(3,1,1,1) ,cex=2.8, offset = 1)
#segments(e1[1],e1[2],e2[1],e2[2], col = "blue")
segments(p[1],p[2],q[1],q[2], col = "black", lty = 2, lwd = 2.5)
lines(c(e1[1]-1,e2[1]),c(0,0),col="blue",lty=2, lwd = 2.5)
arrows(p[1],p[2],e2[1],e2[2],col = "red",code=3,length=0.1, lwd = 2.5)
#arrows(p[1],p[2],e1[1],e1[2],col = "green",code=3,length=0.1)
#alphahull::arc(e1, dist_my(p,e1), c(-1,0), pi, col = "green")
alphahull::arc(e2, dist_my(p,e2), c(-1,0), pi, col = "red", lwd = 2.5)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.3)
points(c(p[1],q[1],e1[1],e2[1]),c(p[2],q[2],e1[2],e2[2]), pch = 19,
col = c("black","black","blue","blue"), cex = 1.3)
graphics.off()
# VORONOI EXAMPLE
n = 10
set.seed(325) # 353
x = runif(n)
y = runif(n)
vorcpp = RcppAlphahull::delvor(x,y)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/vor_ex.png")
RcppAlphahull::plot.delvor(vorcpp, col = c("blue", "red", "black", "blue"), pch = 19, wpoints = T,
wlines = 'vor', number = F, xlab = "x", ylab = "y", xlim = c(0, 1),
ylim = c(0, 1.1), asp = 1, cex = 1.3, lwd = c(2,2),
main = "Voronoi tesselation")
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Report/img/del_ex.png")
RcppAlphahull::plot.delvor(vorcpp, col = c("blue", "red", "black", "blue"), pch = 19, wpoints = T,
wlines = 'del', number = F, xlab = "x", ylab = "y", xlim = c(0, 1),
ylim = c(0, 1.1), asp = 1, cex = 1.3, lwd = c(2,2),
main = "Delaunay triangulation")
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Report/img/delvor_ex.png")
RcppAlphahull::plot.delvor(vorcpp, col = c("blue", "red", "black", "blue"), pch = 19, wpoints = T,
wlines = 'both', number = F, xlab = "x", ylab = "y", xlim = c(0, 1),
ylim = c(0, 1.1), asp = 1, lwd = 2, cex = 1.3, cex.lab = 1.8,
cex.main = 1.8, main = "Voronoi tesselation/Delaunay triangulation")
graphics.off()
alpha = 0.4
ascpp = RcppAlphahull::ashape(vorcpp, alpha = alpha)
ahcpp = RcppAlphahull::ahull(x, y, alpha = alpha)
png("/home/federico/Dropbox/Alpha-hulls/Report/img/ashape_ex.png")
plot(ascpp, col = c("red","blue"), pch = 19, asp = 1, lwd = 2, xlab = "x", ylab = "y", cex = 1.3,
cex.lab = 1.8, cex.main = 2, main = expression(paste(alpha,"-shape for ",alpha,"=0.4")))
graphics.off()
png("/home/federico/Dropbox/Alpha-hulls/Report/img/ahull_ex.png")
plot(ahcpp, col = c("red","blue","blue"), pch = 19, asp = 1, lwd = 2, xlab = "x", ylab = "y", cex = 1.3,
cex.lab = 1.8, cex.main = 2, main = expression(paste(alpha,"-hull for ",alpha,"=0.4")))
graphics.off()
library(RcppAlphahull)
library(RcppAlphahull)
library(RcppAlphahull)
n = 10 # 35
set.seed(353) # 353
x = runif(n)
y = runif(n)
theta = runif(300, 0, 2*pi)
r = runif(300, 0.2, 0.5)
x = r*cos(theta)+0.5
y = r*sin(theta)+0.5
system.time(RcppAlphahull::delvor(x,y))
system.time(alphahull::delvor(x,y))
vorcpp = RcppAlphahull::delvor(x,y)
vorR = alphahull::delvor(x, y)
alpha = 1
asR = alphahull::ashape(vorR, alpha = alpha)
ascpp = RcppAlphahull::ashape(vorcpp, alpha = alpha)
asR$alpha.extremes
ascpp$alpha.extremes
plot(asR, wpoints = T)
plot(ascpp, wpoints = T, col = c("red","black"))
alpha = 0.2
ahR = alphahull::ahull(vorR, alpha = alpha)
ahcpp = RcppAlphahull::ahull(vorcpp, alpha = alpha)
View(ahR$complement)
View(ahcpp$complement)
View(ahR$arcs)
View(ahcpp$arcs)
ahcpp$length
ahR$length
plot(ahR, col = c("red", "black", "black", "black", "black", "black"), asp = 1)
plot(ahcpp, col = c("cyan", "black", "black", "black", "black", "black"), asp = 1, add = T)
plot(ahR, col = c("red", "black", "black", "black", "black", "black"), asp = 1, add = T)
library(RcppAlphahull)
