# ProgettoPACS
A repository for my PACS project
install.packages("rmarkdown")
install.packages("rmarkdown")
n = 500
set.seed(1)
x = runif(n,0,10) # sampling the points
y = runif(n,0,10)
alpha = 0.1
system.time(RcppAlphahull::ahull(x,y,alpha))
system.time(alphahull::ahull(x,y,alpha))
n = 500
set.seed(1)
x = runif(n,0,10) # sampling the points
y = runif(n,0,10)
alpha = 1
system.time(RcppAlphahull::ahull(x,y,alpha))
system.time(alphahull::ahull(x,y,alpha))
n = 500
set.seed(1)
x = runif(n,0,10) # sampling the points
y = runif(n,0,10)
alpha = 0.5
system.time(RcppAlphahull::ahull(x,y,alpha))
system.time(alphahull::ahull(x,y,alpha))
n = 500
set.seed(1)
x = runif(n,0,10) # sampling the points
y = runif(n,0,10)
alpha = 0.4
system.time(RcppAlphahull::ahull(x,y,alpha))
system.time(alphahull::ahull(x,y,alpha))
n = 500
set.seed(1)
x = runif(n,0,10) # sampling the points
y = runif(n,0,10)
alpha = 0.2
system.time(RcppAlphahull::ahull(x,y,alpha))
system.time(alphahull::ahull(x,y,alpha))
n = 500
set.seed(1)
x = runif(n,0,10) # sampling the points
y = runif(n,0,10)
alpha = 0.1
system.time(RcppAlphahull::ahull(x,y,alpha))
system.time(alphahull::ahull(x,y,alpha))
plot(delvor(x,y))
plot(RcppAlphahull::delvor(x,y))
plot(RcppAlphahull::delvor(x,y), asp = 1)
plot(RcppAlphahull::ahull(x,y,alpha), asp = 1)
plot(alphahull::ahull(x,y,alpha), asp = 1)
knitr::opts_chunk$set(echo = TRUE)
alpha = 0.5
plot(alphahull::ahull(x,y,alpha), asp = 1)
plot(RcppAlphahull::ahull(x,y,alpha), asp = 1)
